{:paths   [
           "src/clj" ; Clojure source files
           "src/cljc" ; Clojure source files
           "src/cljs" ; ClojureScript source files
           "target/java" ; compiled Java *.class files
           ]
 :deps    {
           org.clojure/clojure                 {:mvn/version "1.11.1"}
           org.clojure/core.async              {:mvn/version "1.6.673"}
           org.clojure/core.match              {:mvn/version "1.0.1"}
           org.clojure/data.avl                {:mvn/version "0.1.0"}
           org.clojure/data.csv                {:mvn/version "1.0.1"}
           org.clojure/data.xml                {:mvn/version "0.2.0-alpha8"}
           org.clojure/math.combinatorics      {:mvn/version "0.1.6"}
           org.clojure/spec.alpha              {:mvn/version "0.3.218"}
           org.clojure/test.check              {:mvn/version "1.1.1"}
           org.clojure/tools.reader            {:mvn/version "1.3.6"}

           camel-snake-kebab/camel-snake-kebab {:mvn/version "0.4.3"}
           cheshire/cheshire                   {:mvn/version "5.11.0"} ; #todo switch to muuntaja/jsonista
           clj-time/clj-time                   {:mvn/version "0.15.2"}
           danlentz/clj-uuid                   {:mvn/version "0.1.9"}
           joda-time/joda-time                 {:mvn/version "2.12.2"}
           org.ccil.cowan.tagsoup/tagsoup      {:mvn/version "1.2.1"}
           org.flatland/ordered                {:mvn/version "1.15.10"}
           org.snakeyaml/snakeyaml-engine      {:mvn/version "2.6"}
           prismatic/schema                    {:mvn/version "1.4.1"}
           }

 :aliases {
           :run          {:exec-fn demo.core/-main
                          }
           :test         {:extra-deps {io.github.cognitect-labs/test-runner {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
                          :main-opts  ["-m" "cognitect.test-runner"]
                          :exec-fn    cognitect.test-runner.api/test
                          :exec-args  {:dirs     ["src/clj"] ; mandatory to control test dirs searched
                                       :patterns ["tst.*"] ; mandatory to detect testing ns's like `tst.demo.core`
                                       }
                          }
           :test-refresh {:extra-deps {com.jakemccrary/test-refresh {:mvn/version "0.25.0"}}
                          :main-opts  ["-m" "com.jakemccrary.test-refresh" "--dir" "src"]
                          }
           ; This target finds dependencies with outdated version numbers
           :old          {:deps      {com.github.liquidz/antq {:mvn/version "RELEASE"}} ; NOT `:extra-deps` !!!
                          :main-opts ["-m" "antq.core"]
                          }
           }
 }
